-- -- COVID DEATHS -- --
select * from public."CovidDeaths"
where continent is not null
order by 3,4;

-- select * from public."CovidVaccinations"
-- order by 3,4;

-- select data that we're gonna be using
select location, date, total_cases, new_cases, total_deaths, population
from public."CovidDeaths"
order by 1,2;

-- looking for total cases vs total deaths
-- shows likelihood of dying if you contract covid in your country
select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as deaths_percentage
from public."CovidDeaths"
where location = 'Indonesia'
order by 1,2;

-- looking at total cases vs population
-- show us what percentage of population got covid
select location, date, population, total_cases, (total_cases/population)*100 as cases_percentage
from public."CovidDeaths"
where location = 'Indonesia'
order by 1,2;

-- looking at countries with highest infection rate compare to population
select 
	location, 
	population, 
	max(total_cases) as highest_infection, 
	max((total_cases/population))*100 as percent_population_infected
from public."CovidDeaths"
group by location, population
order by percent_population_infected desc;

-- showing countries with highest death count per population
select 
	location,  
	max(total_deaths) as total_death_count 
from public."CovidDeaths"
where continent is not null
group by location
order by total_death_count desc;

-- LET'S BREAK THINGS DOWN BY CONTINENT
-- showing continent with the highest death count per population
select 
	continent, 
	max(total_deaths) as total_death_count 
from public."CovidDeaths"
where continent is not null
group by continent
order by total_death_count desc;

-- GLOBAL NUMBERS
-- 1
select 
	date, 
	sum(new_cases) as total_cases, 
	sum(new_deaths) as total_deaths, 
	sum(new_deaths)/sum(new_cases)*100 as death_percentage
from public."CovidDeaths"
where continent is not null
group by date
order by 1,2;

-- 2
select 
	sum(new_cases) as total_cases, 
	sum(new_deaths) as total_deaths, 
	sum(new_deaths)/sum(new_cases)*100 as death_percentage
from public."CovidDeaths"
where continent is not null
order by 1,2;


-- COVID VACCINATIONS -- --
-- looking at total population vs vaccinations
select 
	dea.continent,
	dea.location,
	dea.date,
	dea.population,
	vac.new_vaccinations,
	sum(vac.new_vaccinations) 
	over(partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated,
	(sum(vac.new_vaccinations) over(partition by dea.location order by dea.location, dea.date)/dea.population)*100
from public."CovidDeaths" as dea
join public."CovidVaccinations" as vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3;

-- USE CTE
with popVSvac 
(continent, location, date, population, new_vaccinations, rolling_people_vacccinated)
as(
select 
	dea.continent,
	dea.location,
	dea.date,
	dea.population,
	vac.new_vaccinations,
	sum(vac.new_vaccinations) 
	over(partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
-- 	(rolling_people_vaccinated/dea.population)*100
from public."CovidDeaths" as dea
join public."CovidVaccinations" as vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
-- order by 2,3
)
select *, (popVSvac.rolling_people_vacccinated/population)*100
from popVSvac;

-- TEMP TABLE
drop table if exists PercentPopulationVaccinated
create table PercentPopulationVaccinated
(
	continent character varying,
	location character varying,
	date date,
	population double precision,
	new_vanccination double precision,
	rolling_people_vaccinated double precision
);

insert into PercentPopulationVaccinated
select 
	dea.continent,
	dea.location,
	dea.date,
	dea.population,
	vac.new_vaccinations,
	sum(vac.new_vaccinations) 
	over(partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
-- 	(rolling_people_vaccinated/dea.population)*100
from public."CovidDeaths" as dea
join public."CovidVaccinations" as vac
	on dea.location = vac.location
	and dea.date = vac.date
-- where dea.continent is not null;
-- order by 2,3

select *, (PercentPopulationVaccinated.rolling_people_vaccinated/population)*100
from PercentPopulationVaccinated;

-- creating view to store data for later visualization
create view PercentPopulationVaccinated as
select 
	dea.continent,
	dea.location,
	dea.date,
	dea.population,
	vac.new_vaccinations,
	sum(vac.new_vaccinations) 
	over(partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
-- 	(rolling_people_vaccinated/dea.population)*100
from public."CovidDeaths" as dea
join public."CovidVaccinations" as vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null;
-- order by 2,3

select * from public.PercentPopulationVaccinated